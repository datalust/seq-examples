services:
  seq1:
    image: datalust/seq:preview
    hostname: seq1
    networks:
      - seqclusterdemo
    volumes:
      - ./seq1init.sh:/seqinit/seq1init.sh
      - ./seq1data:/data
    environment: 
      - ACCEPT_EULA=Y
    healthcheck:
      test: "/seqsvr/Client/seqcli node health -s http://localhost"
      interval: 15s
      timeout: 10s
      retries: 2
      start_period: 5s

  seq2:
    image: datalust/seq:preview
    hostname: seq2
    networks:
      - seqclusterdemo
    volumes:
      - ./seq2init.sh:/seqinit/seq2init.sh
      - ./seq2data:/data
    environment: 
      - ACCEPT_EULA=Y
    healthcheck:
      test: "/seqsvr/Client/seqcli node health -s http://localhost"
      interval: 15s
      timeout: 10s
      retries: 2
      start_period: 5s

  seq1setlicense:
    image: datalust/seqcli
    networks:
      - seqclusterdemo
    depends_on:
      seq1:
        condition: service_healthy
    restart: "no"
    volumes:
      - ./cert.txt:/data/cert.txt
    entrypoint:
      - /bin/seqcli/seqcli 
      - license 
      - apply 
      - --certificate=/data/cert.txt
      - -s http://seq1

  proxy:
    image: nginx
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - seqclusterdemo
    depends_on:
      seq1:
        condition: service_healthy
      seq2:
        condition: service_healthy
    ports:
      - "5666:5666"

  pgseq:
    image: postgres:14
    hostname: pgseq
    networks:
      - seqclusterdemo
    ports:
      5433:5432
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_DB=seq
      - POSTGRES_PASSWORD=terminatorx

networks:
  seqclusterdemo: {}